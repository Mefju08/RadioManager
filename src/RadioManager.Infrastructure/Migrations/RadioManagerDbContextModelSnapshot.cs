// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RadioManager.Infrastructure.Persistance;

#nullable disable

namespace RadioManager.Infrastructure.Migrations
{
    [DbContext(typeof(RadioManagerDbContext))]
    partial class RadioManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("shows")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RadioManager.Domain.Shows.Aggregates.Show", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Presenter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shows", "shows");
                });

            modelBuilder.Entity("RadioManager.Domain.Shows.Aggregates.Show", b =>
                {
                    b.OwnsOne("RadioManager.Domain.Shows.ValueObjects.TimeSlot", "TimeSlot", b1 =>
                        {
                            b1.Property<Guid>("ShowId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("DurationMinutes")
                                .HasColumnType("int")
                                .HasColumnName("DurationMinutes");

                            b1.Property<DateTime>("StartTime")
                                .HasColumnType("datetime2")
                                .HasColumnName("StartTime");

                            b1.HasKey("ShowId");

                            b1.ToTable("Shows", "shows");

                            b1.WithOwner()
                                .HasForeignKey("ShowId");
                        });

                    b.Navigation("TimeSlot");
                });
#pragma warning restore 612, 618
        }
    }
}
